AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Repository:
    Type: String
    Description: Docker image ECR repository URI.
  Tag:
    Type: String
    Description: Docker image ECR tag
  DesiredCount:
    Type: Number
    Description: The number of simultaneous tasks that you want to run on the cluster.
    Default: 1

Resources:

  FargateExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:DescribeParameters
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/config/cdk-journey*
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/config/application*
              - Effect: Allow
                Action:
                  - secretsmanager:ListSecrets
                  - cloudwatch:PutMetricData
                Resource: '*'
              - Effect: Allow
                Action:
                  -  dynamodb:Query
                  -  dynamodb:Get*
                Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/permissions/*

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: cdk-journey
      RetentionInDays: 7

  ServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: cdk-journey
      Cpu: 1024
      Memory: 2048
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt FargateExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSServiceRole.Arn
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: cdk-journey
          Essential: true
          Image: !Sub ${Repository}:${Tag}
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl --fail --insecure https://localhost/
            Interval: 5
            Retries: 2
            StartPeriod: 180
            Timeout: 2
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: cdk-journey
          PortMappings:
            - ContainerPort: 80

  Cluster:
    Type: AWS::ECS::Cluster

  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadbalancerListener
    Properties:
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: 240
      TaskDefinition: !Ref ServiceTaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      LoadBalancers:
        - TargetGroupArn: !Ref ServiceTargetGroup
          ContainerPort: 80
          ContainerName: cdk-journey
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets:
            - !ImportValue vpc-SubnetAPublic
            - !ImportValue vpc-SubnetBPublic

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref AWS::StackName
      VpcId: !ImportValue vpc-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroup
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: 'true'
      Subnets:
        - !ImportValue vpc-SubnetAPublic
        - !ImportValue vpc-SubnetBPublic
      Type: application

  LoadbalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - TargetGroupArn: !Ref ServiceTargetGroup
          Type: forward
      # Certificates:
      #   - CertificateArn: !Ref LoadBalancerAcmCertificate

  ServiceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 15
      UnhealthyThresholdCount: 5
      VpcId: !ImportValue vpc-VPC
      TargetType: ip

  # LoadBalancerAcmCertificate:
  #   Type: AWS::CertificateManager::Certificate
  #   Properties:
  #     DomainName: cdk-journey
  #     ValidationMethod: DNS
  #     DomainValidationOptions:
  #       - DomainName: cdk-journey
  #         HostedZoneId: !ImportValue zone-HostedZoneId

  LoadBalancerRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: cdk-journey.aws.garbe.io
      AliasTarget:
        DNSName: !GetAtt ElasticLoadBalancer.DNSName
        HostedZoneId: !GetAtt ElasticLoadBalancer.CanonicalHostedZoneID
      HostedZoneId: !ImportValue zone-HostedZoneId
      Comment: A records for service
      Type: A
